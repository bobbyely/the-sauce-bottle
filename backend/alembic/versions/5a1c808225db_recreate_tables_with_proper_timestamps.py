"""recreate tables with proper timestamps

Revision ID: 5a1c808225db
Revises: 62d1f95427be
Create Date: 2025-07-04 15:06:21.477222

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5a1c808225db'
down_revision: Union[str, None] = '62d1f95427be'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('politicians',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(), nullable=False),
    sa.Column('party', sa.VARCHAR(), nullable=True),
    sa.Column('chamber', sa.VARCHAR(), nullable=True),
    sa.Column('position_title', sa.VARCHAR(), nullable=True),
    sa.Column('electorate', sa.VARCHAR(), nullable=True),
    sa.Column('state', sa.VARCHAR(), nullable=True),
    sa.Column('date_elected', sa.DATE(), nullable=True),
    sa.Column('sitting_status', sa.VARCHAR(), nullable=True),
    sa.Column('is_cabinet_minister', sa.INTEGER(), nullable=True),
    sa.Column('is_shadow_minister', sa.INTEGER(), nullable=True),
    sa.Column('previous_positions', sa.VARCHAR(), nullable=True),
    sa.Column('website_url', sa.VARCHAR(), nullable=True),
    sa.Column('social_media_links', sa.VARCHAR(), nullable=True),
    sa.Column('statement_count', sa.INTEGER(), nullable=True),
    sa.Column('tags', sa.VARCHAR(), nullable=True),
    sa.Column('profile_picture_url', sa.VARCHAR(), nullable=True),
    sa.Column('created_at', sa.DATETIME(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_politicians_id'), 'politicians', ['id'], unique=False)
    op.create_table('statements',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('date_made', sa.DATE(), nullable=True),
    sa.Column('politician_id', sa.INTEGER(), nullable=False),
    sa.Column('ai_summary', sa.TEXT(), nullable=True),
    sa.Column('ai_contradiction_analysis', sa.TEXT(), nullable=True),
    sa.Column('source_url', sa.VARCHAR(length=1024), nullable=True),
    sa.Column('source_type', sa.VARCHAR(length=50), nullable=True),
    sa.Column('source_name', sa.VARCHAR(length=255), nullable=True),
    sa.Column('review_status', sa.VARCHAR(length=50), server_default=sa.text("'pending'"), nullable=True),
    sa.Column('created_at', sa.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.Column('updated_at', sa.DATETIME(), server_default=sa.text('CURRENT_TIMESTAMP'), nullable=True),
    sa.ForeignKeyConstraint(['politician_id'], ['politicians.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_statements_id'), 'statements', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###
